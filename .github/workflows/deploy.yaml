name: Deployment auf EC2 mit k3s und Helm

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: my-python-app
      IMAGE_TAG: ${{ github.run_number }}

    steps:
    - name: Quellcode auschecken
      uses: actions/checkout@v3

    - name: Docker-Image bauen
      run: |
        echo "Baue Docker-Image: $IMAGE_NAME:$IMAGE_TAG"
        docker build -t $IMAGE_NAME:$IMAGE_TAG ./my-python-app
        docker images

    - name: Docker-Image als TAR speichern
      run: |
        echo "Speichere als TAR"
        docker save $IMAGE_NAME:$IMAGE_TAG -o app.tar
        ls -lh app.tar

    - name: Docker-Image auf EC2 kopieren
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        source: app.tar
        target: /home/ec2-user/app.tar

    # Falls du das Helm-Chart **nicht bei jedem Commit** übertragen willst, kannst du diesen Schritt auskommentieren:
    # - name: Helm-Chart auf EC2 kopieren (nur bei Bedarf)
    #   uses: appleboy/scp-action@v0.1.4
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ec2-user
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     source: my-python-app/helm
    #     target: /home/ec2-user/helm

    - name: Deployment via SSH auf EC2 ausführen
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Importiere Image in k3s containerd..."
          sudo ctr --namespace k8s.io images import /home/ec2-user/app.tar

          echo "Starte Helm Deployment..."
          helm upgrade --install my-python-app /home/ec2-user/helm \
            --set image.repository=my-python-app \
            --set image.tag=${{ github.run_number }}

name: Build & Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build & save Docker image
        run: |
          docker build -t my-python-app:${{ github.run_number }} .
          docker save -o app.tar my-python-app:${{ github.run_number}}

      - name: Configure SSH key
        env:
          SSH_PRIV_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIV_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          # optional: Host-Key-Checking deaktivieren
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Copy image TAR to EC2 via scp
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -i ~/.ssh/deploy_key app.tar ec2-user@$EC2_HOST:/home/ec2-user/app.tar

      - name: Deploy on EC2 via SSH
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/deploy_key ec2-user@$EC2_HOST << 'EOF'
            set -e
            # Image importieren
            sudo ctr --namespace k8s.io images import /home/ec2-user/app.tar
            # Kubernetes Deployment neu starten
            kubectl rollout restart deployment my-python-app
          EOF
